name: Frontend Continuos Deployment

on:
  push:
    branches:
      - main
    paths:
      - 'starter/frontend/**'
  workflow_dispatch:

jobs:

  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: latest

    - name: Install Dependencies
      run: |
        cd starter/frontend
        npm ci

    - name: Lint
      run: |
        cd starter/frontend
        npm run lint

  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: latest

    - name: Install Dependencies
      run: |
        cd starter/frontend
        npm ci

    - name: Run Tests
      run: |
        cd starter/frontend
        npm test

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [lint, test]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS CLI
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        
        aws-region: us-east-1

    - name: Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build Docker Image
      run: |
        cd starter/frontend
        docker build --build-arg REACT_APP_MOVIE_API_URL=http://localhost:5000 --tag 130963274747.dkr.ecr.us-east-1.amazonaws.com/frontend:${{ github.sha }} .
        docker push 130963274747.dkr.ecr.us-east-1.amazonaws.com/frontend:${{ github.sha }}

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [build]
  
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
  
    - name: Configure AWS CLI
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
  
    - name: Set up Kustomize
      run: |
        curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh"  | bash
        sudo mv kustomize /usr/local/bin/
  
    - name: Update kubeconfig
      run: |
        aws eks update-kubeconfig --region us-east-1 --name cluster
  
    - name: Deploy to Kubernetes
      run: |
        cd starter/frontend/k8s
        kustomize edit set image frontend=130963274747.dkr.ecr.us-east-1.amazonaws.com/frontend:${{ github.sha }}
        kustomize build | kubectl apply -f -
